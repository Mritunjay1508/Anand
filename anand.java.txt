import java.util.Arrays;

public class MatrixZeroSetter {

    public static void setZeroes(int[][] matrix) {
        int m = matrix.length;      // Number of rows
        int n = matrix[0].length;   // Number of columns

        boolean[] rows = new boolean[m];
        boolean[] cols = new boolean[n];

        // First pass: Identify the rows and columns that need to be zeroed out
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (matrix[i][j] == 0) {
                    rows[i] = true;
                    cols[j] = true;
                }
            }
        }

        // Second pass: Set the identified rows and columns to zero
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (rows[i] || cols[j]) {
                    matrix[i][j] = 0;
                }
            }
        }
    }

    // Utility function to print the matrix
    public static void printMatrix(int[][] matrix) {
        for (int[] row : matrix) {
            System.out.println(Arrays.toString(row));
        }
    }

    public static void main(String[] args) {
        int[][] matrix = {
            {1, 2, 3},
            {4, 0, 6},
            {7, 8, 9}
        };

        System.out.println("Original Matrix:");
        printMatrix(matrix);

        setZeroes(matrix);

        System.out.println("\nMatrix with Rows and Columns Zeroed Out:");
        printMatrix(matrix);
    }
}
